name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送的标签符合 v* 格式时触发，例如 v1.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest]
        os: [windows-latest]
        include:
        #   - os: ubuntu-latest
        #     artifact_name: ffmpeg_gui_linux
        #     pyinstaller_os: Linux
          - os: windows-latest
            artifact_name: ffmpeg_gui_windows
            pyinstaller_os: Windows
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build executable with PyInstaller
        run: |
          pyinstaller app.py --onefile --name ${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}${{ matrix.pyinstaller_os == 'Windows' && '.exe' || '' }}

  release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v3
              with:
                path: artifacts

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false
        
            - name: Upload Release Assets
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: artifacts/*
                  asset_name: $(basename ${{ github.event.head_commit.message }})
                  asset_content_type: application/octet-stream
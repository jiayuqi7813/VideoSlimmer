name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送的标签符合 v* 格式时触发，例如 v1.0

permissions:
  contents: write  # 为 GITHUB_TOKEN 设置 contents 的写权限

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            artifact_name: VideoSlimmer
            pyinstaller_os: Windows
            executable_name: VideoSlimmer.exe
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Install ffmpeg (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          choco install ffmpeg -y

      - name: Build executable with PyInstaller
        run: |
          pyinstaller app.py --onefile --name ${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}${{ matrix.pyinstaller_os == 'Windows' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: VideoSlimmer
          path: .

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "VideoSlimmer.exe"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
